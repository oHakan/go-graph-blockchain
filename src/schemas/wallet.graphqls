type Wallet {
  publicKey: String!
  privateKey: String!
  address: String!
}

input TransferToken {
  rpcLink: String!
  amount: String!
  fromPrivate: String!
  toPublic: String!
}

input CreateWalletInput {
  name: String
}

input DeployContractInput {
  name: String!
  symbol: String!
  supply: Float!
  rpcLink: String!
  chainId: Float!
  privateKey: String!
}

input TransferCustomTokenInput {
  fromAddress: String!
  contractAddress: String!
  rpcLink: String!
  chainId: Float!
  toAddress: String!
  amount: Float!
}

extend type Mutation {
  createWallet(input: CreateWalletInput): Wallet!
  transferToken(input: TransferToken): String!
  deployContract(input: DeployContractInput): String!
  transferCustomToken(input: TransferCustomTokenInput): String!
}
